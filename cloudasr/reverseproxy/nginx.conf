iworker_processes 1;

events { worker_connections 1024; }

http {
   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    resolver 127.0.0.11 valid=1s;

    sendfile on;

    upstream api {
        ip_hash;
        server api:80;
    }

    upstream web {
        server web:80;
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name cloudasrtest.westeurope.cloudapp.azure.com;

        ssl_certificate           /etc/nginx/cert/fullchain.pem;
        ssl_certificate_key       /etc/nginx/cert/privkey.pem;

        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        access_log            /var/log/nginx/jenkins.access.log;

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            add_header "Access-Control-Allow-Origin"  *;
            # Fix the â€œIt appears that your reverse proxy set up is broken" error.
            proxy_pass          http://web;
            proxy_read_timeout  90;

            proxy_redirect      http://web https://cloudasrtest.westeurope.cloudapp.azure.com;
        }
    }

    server {
        listen 8001;
        location / {
            proxy_pass         http://monitor;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $host:$server_port;
        }
        location /socket.io/ {
            proxy_pass http://api/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

    }

    server {
        listen 8000 ssl;
        server_name cloudasrtest.westeurope.cloudapp.azure.com;
        ssl_certificate           /etc/nginx/cert/fullchain.pem;
        ssl_certificate_key       /etc/nginx/cert/privkey.pem;

        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_pass http://api;
          add_header "Access-Control-Allow-Origin"  *;
	      }

        location /socket.io/ {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_pass http://api/socket.io/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          add_header "Access-Control-Allow-Origin"  *;
        }
    }

    server {
        listen 8002;

        location / {
            proxy_pass         http://recordings;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $host:$server_port;
        }
    }
}
